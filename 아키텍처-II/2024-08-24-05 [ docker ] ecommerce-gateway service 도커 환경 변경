gateway service
#-----------------------------------------------------------------------------------------------------------------------
[아키텍처]
    우리는 이제 docker-container의 ip가 아닌 실제 도커 컨테이너의 이름으로 서비스를 찾을 수 있도록 환경을 구성해보자
    --------------------------------------------------------------------------------------------------------------------
    □ HOST PC 172.30.1.23
    □ Docker Server(Engine) 172.17.0.1
        - Container (Config-service) 172.17.0.3:8888
        - Contaienr (maridb) 172.17.0.6:3306
        ....
        여기서 config-service는 maridb를 사용하기 위해 ip 182.17.0.6:3306 이 아니라 maridb 컨테이너 이름으로 접근가능 하도록하는
        환경을 구성한다.
#-----------------------------------------------------------------------------------------------------------------------
[gateway-service]
    □ application.yml -
        eureka:
          instance:
            hostname: localhost
          client:
            register-with-eureka: true
            fetch-registry: true
            service-url:
              # -------------------------------------------------------------------------------------------------------
              # 여기에 명시된 환경은 윈도우가 host 환경으로 할때 적용되고 만약 도커 환경일 경우에는 docker run -e 옵션으로 직접 명시한다.
              defaultZone: http://localhost:8761/eureka
    □ bootstrap.yml
    spring:
      cloud:
        #-------------------------------------------------------------------------------------------------------------------
        # 기동 gateway가 기동시 환경정보를 config-service로 가져오는 것으로 한다.
        # 문제는 이것이 도커 컨테이너가 가게 되었을때 127.0.0.1을 컨테이너 자신의 ip가 되므로
        # 이것을 도커로 하기위해서는 docker run 시 환경파일로서 정보를 받는 것으로 한다.
        config:
          uri: http://127.0.0.1:8888
          name: ecommerce
        ----------------------------------------------------------------------------------------------------------------
[확인]
    - http://localhost:8000